A String
链接：https://ac.nowcoder.com/acm/contest/887/A
来源：牛客网

题意：一个01字符串，将它切割成若干个完美字符串，完美字符串的意义是这个字符串成环之后的字典序最小



/***************************************************************************************************************************************/
B Irreducible Polynomial

链接：https://ac.nowcoder.com/acm/contest/887/B
来源：牛客网

题意：给你一个多项式的系数，判断这个多项式是不是不可约多项式

题解：最高次为1的时候一定不可约，最高次3次及3次以上的时候一定可约
判断2次的情况，如果这个函数有0点，则可约，如果没有0点，则不可约，判断delta的值

#include<iostream>
#include<cmath>
using namespace std;
typedef long long ll;
ll a[30];

int main()
{
	ll t;
	ll n;
	cin>>n;
	while(n--)
	{
		//int a,b,c;
		cin>>t;
		for(int i=0;i<=t;i++) cin>>a[i];
		if (t<=1) {cout<<"Yes"<<endl;}
		else if (t>2) {cout<<"No"<<endl;}
		else
		{
		 //cin>>a[0]>>a[1]>>a[2];
			if (a[1]*a[1]-4*a[0]*a[2]>=0)
				cout<<"No"<<endl;
			else
				cout<<"Yes"<<endl;
		}		
	}

}


/***************************************************************************************************************************************/
C
/***************************************************************************************************************************************/
D
/***************************************************************************************************************************************/
E
/***************************************************************************************************************************************/
F
/***************************************************************************************************************************************/
G
/***************************************************************************************************************************************/
H
/***************************************************************************************************************************************/
I
/***************************************************************************************************************************************/
J
/***************************************************************************************************************************************/
